{"ast":null,"code":"import{SHOW_PATHLIST}from'../actions';/* パスリストの初期値 */var initialState=[];/* パスリストの状態の更新 */var pathItemList=function pathItemList(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;console.log(\"--イベント(action)の内容---\");console.log(JSON.stringify(action));console.log(\"--------------------------\");console.log(\"--変更前の状態(state)------\");console.log(state);console.log(\"--------------------------\");switch(action.type){case SHOW_PATHLIST:// 'フォルダの一覧表示イベント'\nvar fullpath=action.fullpath;console.log('* 表示するフォルダパス='+fullpath);var fs=window.require('fs');var path=window.require('path');var names=fs.readdirSync(fullpath);var _pathItemList=[];names.map(function(name){var stat=fs.statSync(path.join(fullpath,name));var modified=toLocaleTimeString(stat.mtime);var isDirectory=stat.isDirectory();_pathItemList.push(createPathItem(name,modified,isDirectory));});console.log(\"* 表示するパス一覧の数=\"+_pathItemList.length);return _pathItemList;default:return state;}};/* パスアイテムの作成 */var createPathItem=function createPathItem(name,modified,isDirectory){return{name:name,modified:modified,isDirectory:isDirectory};};/* 時刻の文字列変換 */var toLocaleTimeString=function toLocaleTimeString(date){return[date.getFullYear(),date.getMonth()+1,date.getDate()].join('/')+' '+date.toLocaleTimeString();};export default pathItemList;","map":{"version":3,"sources":["D:/opt/wss_study/ReactEl/src/reducers/pathItemList.js"],"names":["SHOW_PATHLIST","initialState","pathItemList","state","action","console","log","JSON","stringify","type","fullpath","fs","window","require","path","names","readdirSync","map","name","stat","statSync","join","modified","toLocaleTimeString","mtime","isDirectory","push","createPathItem","length","date","getFullYear","getMonth","getDate"],"mappings":"AAAA,OAAQA,aAAR,KAA4B,YAA5B,CACA,eACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,iBACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBF,YAAyB,IAAXG,CAAAA,MAAW,2CACrDC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAZ,EACAC,OAAO,CAACC,GAAR,CAAY,4BAAZ,EACAD,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACAE,OAAO,CAACC,GAAR,CAAY,4BAAZ,EACA,OAAQF,MAAM,CAACK,IAAf,EACE,IAAKT,CAAAA,aAAL,CAAoB;AAClB,GAAIU,CAAAA,QAAQ,CAAGN,MAAM,CAACM,QAAtB,CACAL,OAAO,CAACC,GAAR,CAAY,gBAAkBI,QAA9B,EACA,GAAMC,CAAAA,EAAE,CAAGC,MAAM,CAACC,OAAP,CAAe,IAAf,CAAX,CACA,GAAMC,CAAAA,IAAI,CAAGF,MAAM,CAACC,OAAP,CAAe,MAAf,CAAb,CACA,GAAIE,CAAAA,KAAK,CAAGJ,EAAE,CAACK,WAAH,CAAeN,QAAf,CAAZ,CACA,GAAIR,CAAAA,aAAY,CAAG,EAAnB,CACAa,KAAK,CAACE,GAAN,CAAU,SAAAC,IAAI,CAAI,CAChB,GAAIC,CAAAA,IAAI,CAAGR,EAAE,CAACS,QAAH,CAAYN,IAAI,CAACO,IAAL,CAAUX,QAAV,CAAoBQ,IAApB,CAAZ,CAAX,CACA,GAAII,CAAAA,QAAQ,CAAGC,kBAAkB,CAACJ,IAAI,CAACK,KAAN,CAAjC,CACA,GAAIC,CAAAA,WAAW,CAAGN,IAAI,CAACM,WAAL,EAAlB,CACAvB,aAAY,CAACwB,IAAb,CAAkBC,cAAc,CAACT,IAAD,CAAMI,QAAN,CAAeG,WAAf,CAAhC,EACD,CALD,EAMApB,OAAO,CAACC,GAAR,CAAY,gBAAkBJ,aAAY,CAAC0B,MAA3C,EACA,MAAO1B,CAAAA,aAAP,CACF,QACE,MAAOC,CAAAA,KAAP,CAjBJ,CAmBD,CA1BD,CA2BA,eACA,GAAMwB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACT,IAAD,CAAOI,QAAP,CAAiBG,WAAjB,CAAiC,CACtD,MAAO,CACLP,IAAI,CAAEA,IADD,CAELI,QAAQ,CAAEA,QAFL,CAGLG,WAAW,CAAEA,WAHR,CAAP,CAKD,CAND,CAOA,cACA,GAAMF,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAEM,IAAF,CAAY,CACrC,MAAO,CACHA,IAAI,CAACC,WAAL,EADG,CAEHD,IAAI,CAACE,QAAL,GAAkB,CAFf,CAGHF,IAAI,CAACG,OAAL,EAHG,EAIDX,IAJC,CAIK,GAJL,EAIa,GAJb,CAKDQ,IAAI,CAACN,kBAAL,EALN,CAMD,CAPD,CASA,cAAerB,CAAAA,YAAf","sourcesContent":["import {SHOW_PATHLIST} from '../actions'\r\n/* パスリストの初期値 */\r\nconst initialState = []\r\n/* パスリストの状態の更新 */\r\nconst pathItemList = (state = initialState, action) => {\r\n  console.log(\"--イベント(action)の内容---\")\r\n  console.log(JSON.stringify(action))\r\n  console.log(\"--------------------------\")\r\n  console.log(\"--変更前の状態(state)------\")\r\n  console.log(state)\r\n  console.log(\"--------------------------\")\r\n  switch (action.type) {\r\n    case SHOW_PATHLIST: // 'フォルダの一覧表示イベント'\r\n      let fullpath = action.fullpath\r\n      console.log('* 表示するフォルダパス=' + fullpath)\r\n      const fs = window.require('fs')\r\n      const path = window.require('path')\r\n      let names = fs.readdirSync(fullpath)\r\n      let pathItemList = []\r\n      names.map(name => {\r\n        let stat = fs.statSync(path.join(fullpath, name))\r\n        let modified = toLocaleTimeString(stat.mtime)\r\n        let isDirectory = stat.isDirectory()\r\n        pathItemList.push(createPathItem(name,modified,isDirectory))\r\n      })\r\n      console.log(\"* 表示するパス一覧の数=\" + pathItemList.length)\r\n      return pathItemList\r\n    default:\r\n      return state\r\n  }\r\n}\r\n/* パスアイテムの作成 */\r\nconst createPathItem = (name, modified, isDirectory) => {\r\n  return {\r\n    name: name,\r\n    modified: modified,\r\n    isDirectory: isDirectory,\r\n  }\r\n}\r\n/* 時刻の文字列変換 */\r\nconst toLocaleTimeString = ( date ) => {\r\n  return [\r\n      date.getFullYear(),\r\n      date.getMonth() + 1,\r\n      date.getDate()\r\n      ].join( '/' ) + ' '\r\n      + date.toLocaleTimeString();\r\n}\r\n\r\nexport default pathItemList"]},"metadata":{},"sourceType":"module"}