{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{openButtonClickEvent}from'../actions';var inputStyle={\"width\":\"300px\"};/* アドレスバーの画面とイベント発行 \r\n   dispatch後、reducers(folderTreeItem)が呼び出される。*/var AddressBar=function AddressBar(_ref){var dispatch=_ref.dispatch;var folderPath;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();if(!folderPath.value.trim()){return;}console.log('==> イベント発行(コンテナ) openButtonClickEvent rootPath='+folderPath.value);dispatch(openButtonClickEvent(folderPath.value));}},/*#__PURE__*/React.createElement(\"input\",{style:inputStyle,ref:function ref(node){folderPath=node;}}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"\\u958B\\u304F\")));};/* フォルダツリーアイテムの状態の切り出し */var mapStateToPorps=function mapStateToPorps(state){return{folderTreeItem:state.folderTreeItem};};/* フォルダツリーアイテムの状態と画面(コンテナ)の接続(connect呼び出し) */var AddressBarPanel=connect(mapStateToPorps)(AddressBar);export default AddressBarPanel;","map":{"version":3,"sources":["D:/opt/wss_study/ElectronStudy2/file-explorer-handson/src/containers/AddressBarPanel.js"],"names":["React","connect","openButtonClickEvent","inputStyle","AddressBar","dispatch","folderPath","e","preventDefault","value","trim","console","log","node","mapStateToPorps","state","folderTreeItem","AddressBarPanel"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,oBAAT,KAAqC,YAArC,CAEA,GAAMC,CAAAA,UAAU,CAAG,CAAC,QAAQ,OAAT,CAAnB,CACA;+CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACnC,GAAIC,CAAAA,UAAJ,CACA,mBACE,4CACE,4BAAM,QAAQ,CAAE,kBAAAC,CAAC,CAAI,CACnBA,CAAC,CAACC,cAAF,GACA,GAAI,CAACF,UAAU,CAACG,KAAX,CAAiBC,IAAjB,EAAL,CAA8B,CAC5B,OACD,CACDC,OAAO,CAACC,GAAR,CAAY,kDAAoDN,UAAU,CAACG,KAA3E,EACAJ,QAAQ,CAACH,oBAAoB,CAACI,UAAU,CAACG,KAAZ,CAArB,CAAR,CACA,CAPF,eAQE,6BAAO,KAAK,CAAEN,UAAd,CAA0B,GAAG,CAAE,aAAAU,IAAI,CAAI,CACrCP,UAAU,CAAGO,IAAb,CACD,CAFD,EARF,cAWE,8BAAQ,IAAI,CAAC,QAAb,iBAXF,CADF,CADF,CAmBD,CArBD,CAsBA,yBACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,cAAc,CAAGD,KAAK,CAACC,cADlB,CAAP,CAGD,CAJD,CAKA,6CACA,GAAMC,CAAAA,eAAe,CAAGhB,OAAO,CAC7Ba,eAD6B,CAAP,CAEtBV,UAFsB,CAAxB,CAIA,cAAea,CAAAA,eAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { openButtonClickEvent } from '../actions'\r\n\r\nconst inputStyle = {\"width\":\"300px\"}\r\n/* アドレスバーの画面とイベント発行 \r\n   dispatch後、reducers(folderTreeItem)が呼び出される。*/\r\nconst AddressBar = ({ dispatch }) => {\r\n  let folderPath\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        if (!folderPath.value.trim()) {\r\n          return\r\n        }\r\n        console.log('==> イベント発行(コンテナ) openButtonClickEvent rootPath=' + folderPath.value)\r\n        dispatch(openButtonClickEvent(folderPath.value))\r\n       }}>\r\n        <input style={inputStyle} ref={node => {\r\n          folderPath = node\r\n        }} />\r\n        <button type=\"submit\">\r\n          開く\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n/* フォルダツリーアイテムの状態の切り出し */\r\nconst mapStateToPorps = (state) => {\r\n  return {\r\n    folderTreeItem : state.folderTreeItem, \r\n  }\r\n}\r\n/* フォルダツリーアイテムの状態と画面(コンテナ)の接続(connect呼び出し) */\r\nconst AddressBarPanel = connect(\r\n  mapStateToPorps\r\n)(AddressBar)\r\n\r\nexport default AddressBarPanel"]},"metadata":{},"sourceType":"module"}